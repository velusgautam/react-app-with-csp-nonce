load_module modules/ngx_http_js_module.so;

http {
    js_path /etc/nginx/njs/;
    js_import main from main.mjs;
    js_set $csp_nonce main.getNonce;

    include mime.types;

    set_real_ip_from 0.0.0.0/0;
    real_ip_recursive on;
    real_ip_header X-Forward-For;

    server {
        listen 80;
        server_name localhost;
        root /html;

        real_ip_header X-Forwarded-For;
        real_ip_recursive on;

        gzip on;
        gzip_static on;

        location / {
            try_files $uri = /index.html;
        }

        location = /index.html {
            sub_filter_once off;
            sub_filter "_NONCE_" $csp_nonce;
            # Security Headers - note the semicolons
            add_header Content-Security-Policy "default-src 'none'; 
                script-src 'strict-dynamic' 'nonce-$csp_nonce'; 
                style-src 'self' 'nonce-$csp_nonce'; 
                img-src 'self'; 
                font-src 'self'; 
                connect-src 'self'; 
                media-src 'self'; 
                frame-src 'none'; 
                child-src 'none'; 
                frame-ancestors 'none'; 
                form-action 'self'; 
                base-uri 'none'; 
                object-src 'none'; 
                manifest-src 'self'; 
                require-trusted-types-for 'script'; 
                upgrade-insecure-requests; 
                block-all-mixed-content;" always;
            
            add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
            add_header X-Frame-Options "SAMEORIGIN" always;
            add_header X-Content-Type-Options "nosniff" always;
            add_header Referrer-Policy "strict-origin-when-cross-origin" always;
            add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
            add_header Cross-Origin-Opener-Policy "same-origin" always;
            add_header Cross-Origin-Resource-Policy "same-origin" always;
            add_header Cross-Origin-Embedder-Policy "require-corp" always;
            expires -1;
            try_files /index.html =200;
        }

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /html;
        }
    }
}

events {
    worker_connections 1024;
    use epoll; # Default event processing mechanism on Linux
    multi_accept off;
}
